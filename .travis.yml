language: python

sudo: false
dist: xenial

env:
  global:
    - secure: "Aw4aBCh8vdSucdmJc3u/LyHkjkKK++9r/qPf24Xq/4MqYdnSiKuKkFRdvRF8wqnyca/1UctAJlULta75eB1/3tU/lkLh5n15C8ATYDH/17jCYU/Lh621B1uedP/N56q6FLWFxfRjHONMRxesa33Hr0G+hlQqMWiuwoGGlJQRgFeclhJ0SA1cBE10tQYBsBrph61OpnoMQ413PHpKH1UcCHMRyCLdYJhJ4LF9vCpLq+zULQ+irSwK8L1HjFGGvXulnT2DRodk1QTLYMTpAURUI+q6BSPd0AlWr2liykTJQyv4GawbCpHCHJ4yGjn9HHjb3Rn2iCTT1ij1UC/IlFOmAgN7IYZ1wCrCw3GX6XRL4oD/POSWTw2lOsqGct48qLzECouvv9Qa24QFnwInuWPAprjiKqaC231IWjatChcqAADj6o7X0JwTf7NwmDb/Bgon6BUsSJ7AIGeDmlauXbK2SXaO6mc+gUMAEWov4kOfiZqwk0+wU2LmOKvS/9tcP2PrW87xFHBJ11juIAp/guMhMEUyumXyNVnNdpozE9aYOZ+CehxI7ThiHBcJ+STltQxKEFb/cyPeyY1zt09PH3Mver3pZnXIug+VWffQ/tJS2iGC8ndwwPkEgOTA4bTmDbugjbKN02dVJlMxabz90orrp8haKUC9Aiu54kVp7hgZqx0="

matrix:
  fast_finish: true
  include:
    - python: 3.7
      env: TEST_TARGET=default
    - python: 3.8
      env: TEST_TARGET=default
    - python: 3.8
      env: TEST_TARGET=coding_standards
    - python: 3.8
      env: TEST_TARGET=docs
    - python: 3.8
      env: TEST_TARGET=makerelease
  allow_failures:
    - python: 3.8
      env: TEST_TARGET=coding_standards
    - python: 3.8
      env: TEST_TARGET=docs

before_install:
  # Install miniconda
  # -----------------
  - export CONDA_BASE=https://repo.continuum.io/miniconda/Miniconda3
  - export MINICONDA_VERSION=latest
  - wget ${CONDA_BASE}-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set show_channel_urls True
  - conda config --add create_default_packages pip
  - conda update --quiet conda

  # Add 3rd party channels
  # ------------------------------------
  - conda config --add channels conda-forge

  # Create our environment
  # ------------------------------------
  - ENV_NAME='test-environment'
  - conda create --quiet -n $ENV_NAME python=$TRAVIS_PYTHON_VERSION
  - source activate $ENV_NAME

  # Install testing requirements
  # ------------------------------------
  - conda install --file requirements.txt --file tests/requirements.txt
  - conda list --export

# Test source distribution.
install:
  - python setup.py sdist && version=$(python setup.py --version) && pushd dist && pip install ioos_qc-${version}.tar.gz && popd

script:
  - set -e

  - if [[ $TEST_TARGET == 'default' ]]; then
      py.test --disable-warnings ;
    fi

  - if [[ $TEST_TARGET == "coding_standards" ]]; then
      py.test --disable-warnings --flake8 -m flake8 ;
    fi

  - if [[ $TEST_TARGET == 'docs' ]]; then
      ./docs/deploy.sh ;
    fi

  - if [[ $TEST_TARGET == 'makerelease' ]]; then
      echo "Making a release..." ;
    fi

after_success:
  - env
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" != "" ] && [ "$TEST_TARGET" == "makerelease" ]; then
      echo "Start release..." ;
      conda install -n root conda-build anaconda-client ;
      conda build conda-recipe --python $TRAVIS_PYTHON_VERSION ;
      anaconda -t $ANACONDA_TOKEN upload --force -u axiom-data-science $HOME/miniconda/**/ioos_qc-*.tar.bz2 ;
      echo "Finished release" ;
    fi
